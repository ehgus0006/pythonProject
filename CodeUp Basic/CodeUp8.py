# 6081  ~ 6091
# 기초-종합


# 6081
# A, B, C, D, E, F 중 하나가 입력될 때,
# 1부터 F까지 곱한 16진수 구구단의 내용을 출력해보자.
# (단, A ~ F 까지만 입력된다.)

# n = int(input(), 16)
#
# for i in range(1, 16):
#     print('%X'%n, '*%X'%i, '=%X'%(n*i), sep='')

# 6082
# ** 3 6 9 게임은?
# 여러 사람이 순서를 정한 후, 순서대로 수를 부르는 게임이다.
# 만약 3, 6, 9 가 들어간 수를 자신이 불러야 하는 상황이라면, 수를 부르는 대신 "박수(X)" 를 쳐야 한다.
# 33과 같이 3,6,9가 두 번 들어간 수 일때, "짝짝"과 같이 박수를 두 번 치는 형태도 있다.

# end옵션을 사용하면 그 뒤의 출력값과 이어서 출력한다. (즉, 줄바꿈을 하지 않게 된다.)
# n = int(input())
# for i in range(1 ,n+1):
#     if(i%10==3 or i%10==6 or i%10==9):
#         print("X", end=' ')
#         continue
#     print(i, end=' ')

# 6083
#
# 빨강(red), 초록(green), 파랑(blue) 빛을 섞어 여러 가지 다른 색 빛을 만들어 내려고 한다.
#
# 빨강(r), 초록(g), 파랑(b) 각 빛의 가짓수가 주어질 때,
# 주어진 rgb 빛들을 섞어 만들 수 있는 모든 경우의 조합(r g b)과 만들 수 있는 색의 가짓 수를 계산해보자.
#
# **모니터, 스마트폰과 같은 디스플레이에서 각 픽셀의 색을 만들어내기 위해서 r, g, b 색을 조합할 수 있다.
# **픽셀(pixel)은 그림(picture)을 구성하는 셀(cell)에서 이름이 만들어졌다.

# r, g, b = map(int, input().split())
#
# for i in range(r):
#     for j in range(g):
#         for k in range(b):
#             print(i,j,k)
# print(r*g*b)

# 6086
# 1, 2, 3 ... 을 순서대로 계속 더해 합을 만드는데,
# 그 합이 입력한 정수보다 작을 동안만 계속 더하는 프로그램을 작성해보자.
#
# 즉, 1부터 n까지 정수를 하나씩 더해 합을 만드는데,
# 어디까지 더해야 입력한 수보다 같거나 커지는지 알아보고자 하는 문제이다.
#
# 하지만, 이번에는 그 때 까지의 합을 출력해야 한다.
#
# 예를 들어, 57을 입력하면
# 1+2+3+...+8+9+10=55에서 그 다음 수인 11을 더해 66이 될 때,
# 그 값 66이 출력되어야 한다.

# n = int(input())
# sum = 0
# i = 1
# while(True):
#     sum += i
#     i += 1
#     if(sum>=n): # 55 입력한값  57
#         break
#
# print(sum)

# 6087
# 1부터 입력한 정수까지 1씩 증가시켜 출력하는 프로그램을 작성하되,
# 3의 배수인 경우는 출력하지 않도록 만들어보자.
#
# 예를 들면,
# 1 2 4 5 7 8 10 11 13 14 ...
# 와 같이 출력하는 것이다.

# n = int(input())
# for i in range(1, n+1):
#     if(i%3==0):
#         continue
#     print(i, end=' ')

# 6088
# 어떤 규칙에 따라 수를 순서대로 나열한 것을 수열(sequences)이라고 한다.
#
# 예를 들어
# 1 4 7 10 13 16 19 22 25 ... 은
# 1부터 시작해 이전에 만든 수에 3을 더해 다음 수를 만든 수열이다.
# 이러한 것을 수학에서는 앞뒤 수들의 차이가 같다고 하여
#
# 등차(차이가 같다의 한문 말) 수열이라고 한다. (등차수열 : arithmetic progression/sequence)
# 수열을 알게 된 영일이는 갑자기 궁금해졌다.
#
# "그럼.... 123번째 나오는 수는 뭘까?"
#
# 영일이는 프로그램을 만들어 더 큰 수도 자동으로 계산하고 싶어졌다.
#
# 시작 값(a), 등차(d), 몇 번째인지를 나타내는 정수(n)가 입력될 때
# n번째 수를 출력하는 프로그램을 만들어보자.
# 1 +3 5번쨰         1   4  7    10 13
# a, d, n = map(int, input().split())
# total = a
# for i in range(0, n-1):
#     total=total+d
# print(total)


# 6089
# 예를 들어
# 2 6 18 54 162 486 ... 은
# 2부터 시작해 이전에 만든 수에 3을 곱해 다음 수를 만든 수열이다.
#
# 이러한 것을 수학에서는 앞뒤 수들의 비율이 같다고 하여
# 등비(비율이 같다의 한문 말) 수열이라고 한다. (등비수열 : geometric progression/sequence)
#
# 등비 수열을 알게된 영일이는 갑자기 궁금해졌다.
# "그럼.... 13번째 나오는 수는 뭘까?"
# 영일이는 프로그램을 만들어 더 큰 수도 자동으로 계산하고 싶어졌다.
# a, d, n = map(int, input().split())
# total = a
# for i in range(0, n-1): #괄호안 시작점~끝점 0부터 2 012
#     total=total*d
# print(total)


# 6090
# 예를 들어
# 1 -1 3 -5 11 -21 43 ... 은
# 1부터 시작해 이전에 만든 수에 -2를 곱한 다음 1을 더해 다음 수를 만든 수열이다.
#
# 이런 이상한 수열을 알게 된 영일이는 또 궁금해졌다.
# "그럼.... 13번째 나오는 수는 뭘까?"
#
# 영일이는 물론 수학을 아주 잘하지만 이런 문제는 본 적이 거의 없었다...
# 그래서 프로그램을 만들어 더 큰 수도 자동으로 계산하고 싶어졌다.
#
# 시작 값(a), 곱할 값(m), 더할 값(d), 몇 번째인지를 나타내는 정수(n)가 입력될 때,
# n번째 수를 출력하는 프로그램을 만들어보자.
#
# a, m, d, n = map(int, input().split())
# total = a
# for i in range(0, n-1): #괄호안 시작점~끝점 0부터 2 012
#     total=total*m+a
# print(total)

# 6091 : [기초-종합] 함께 문제 푸는 날(설명)(py)
# 예를 들어 3명이 같은 날 가입/등업하고, 각각 3일마다, 7일마다, 9일마다
# 한 번씩 들어온다면, 처음 가입하고 63일 만에 다시 3명이 함께 문제를 풀게 된다.
#
# 갑자기 힌트?
# 왠지 어려워 보이지 않는가?
# 수학에서 배운 최소공배수를 생각한 사람들도 있을 것이다. 하지만, 정보에서 배우고 경험하는
# 정보과학의 세상은 때때로 컴퓨터의 힘을 빌려 간단한 방법으로 해결할 수 있게 한다.
#
# 아래의 코드를 읽고 이해한 후 도전해 보자.
# day는 날 수, a/b/c는 방문 주기이다.
# ...
# d = 1
# while d%a!=0 or d%b!=0 or d%c!=0 :
#   d += 1
# print(d)
# ...
#
# 물론, 아주 많은 다양한 방법이 있을 수 있다.


a, b, c = map(int, input().split())
d = 1

while (d%a!=0 or d%b!=0 or d%c!=0) :
  d += 1
print(d)

